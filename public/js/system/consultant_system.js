// Generated by CoffeeScript 1.9.3
(function() {
  window.App = {
    Models: {},
    Views: {},
    Collections: {},
    InitViews: {},
    InitModels: {},
    InitCollections: {},
    Objects: {
      socket: {}
    },
    Functions: {}
  };

  App.Functions.getSocket = function() {
    if (Object.keys(App.Objects.socket)) {
      console.log('Инициализация сокета');
      return App.Objects.socket = io('http://127.0.0.1:1337');
    } else {
      console.log('Возвращаем объект сокета');
      return App.Objects.socket;
    }
  };

  App.Models.OnlineClient = Backbone.Model.extend({
    defaults: function() {
      return {
        ip: "",
        name: "",
        phone: "",
        message: ""
      };
    },
    initialize: function() {
      return console.log("Инициализация модели онлайн пользователя");
    },
    clear: function() {
      return this.destroy();
    }
  });

  App.Collections.OnlineClients = Backbone.Collection.extend({
    model: App.Models.OnlineClient
  });

  App.InitCollections.OnlineClients = new App.Collections.OnlineClients;

  App.Views.OnlineClient = Backbone.View.extend({
    tagName: 'tr',
    template: _.template($('#online_user_template').html()),
    events: {
      'click .init_single_chat': 'initSingleChat'
    },
    initialize: function() {
      return this.model.bind('destroy', this.remove, this);
    },
    render: function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    },

    /* ~~~~~~~~~~~~~~~~~~~~~~~ Дополнительные функции ~~~~~~~~~~~~~~~~~~~~~~~ */
    initSingleChat: function() {
      return console.log('Инициализируем чат');
    }
  });

  App.Views.OnlineClientsTable = Backbone.View.extend({
    el: '#users_online_table',
    socket: {},
    initialize: function() {
      console.log('Инициализируем таблицу онлайн пользователей');
      this.socket = App.Functions.getSocket();
      this.socket.emit('addConsultant');
      this.socket.on('addClient', (function(_this) {
        return function(data) {
          return _this.takeNewFromSocket(data);
        };
      })(this));
      return App.Collections.OnlineClients.bind('add', this.addOne, this);
    },
    addOne: function(OnlineClientModel) {
      var view;
      view = new App.Views.OnlineClient(OnlineClientModel);
      return this.$el.append(view.render().el);
    },
    takeNewFromSocket: function(socket_data) {
      console.log("Через сокет получен новый клиент", socket_data);
      return App.InitCollections.OnlineClients.create(socket_data);
    }
  });

  App.InitViews.OnlineClientsTable = new App.Views.OnlineClientsTable;

}).call(this);
